kind: Service
apiVersion: v1
metadata:
  name: helloserver-service
spec:
  selector:
    app: helloserver
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: example-helloserver
  labels:
    app: helloserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: helloserver
  template:
    metadata:
      labels:
        app: helloserver
    spec:
      imagePullSecrets:
      - name: pipeline-docker-registry
      containers:
      - name: helloserver
        image: ${CICD_IMAGE}:${CICD_EXECUTION_SEQUENCE}
        ports:
        - containerPort: 80
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "helloserver-ingress"
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/subnets: subnet-098c3e9db6e64d201, subnet-05dcbd276efd6d3e3
    alb.ingress.kubernetes.io/ip-address-type: ipv4
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:eu-west-1:155136788633:certificate/b7386b8d-9086-4252-92f0-6a1796e012f4"
  labels:
    app: helloserver-ingress
spec:
  rules:
    - host: helloserver-service.couponbeard.com
      http:
        paths:
          - path: /
            backend:
              serviceName: "helloserver-service"
              servicePort: 80
